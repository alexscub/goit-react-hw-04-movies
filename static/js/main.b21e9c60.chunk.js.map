{"version":3,"sources":["components/Navigation/Navigation.module.css","components/MovieCard/MovieCard.module.css","components/AdditionalInfo/AdditionalInfo.module.css","components/Navigation/Navigation.jsx","components/App/api.js","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","components/MovieCard/MovieCard.jsx","components/MovieCard/Reviews/ReviewsItem/ReviewsItem.jsx","components/MovieCard/Reviews/Reviews.jsx","components/MovieCard/Cast/CastItem/CastItem.jsx","components/MovieCard/Cast/Cast.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetailsPage.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Navigation","className","styles","navList","exact","to","navLink","activeClassName","navLinkActive","API_URL","API_KEY","fetchTrendingMovies","axios","get","then","response","data","results","fetchMovieById","id","fetchSearchMovie","query","withRouter","moviesList","location","map","el","key","pathname","state","from","title","HomePage","api","setState","this","length","Component","SearchForm","initialState","value","handleChange","e","target","onSubmit","props","preventDefault","type","autoComplete","placeholder","onChange","MoviesPage","getQuery","search","URLSearchParams","handleSearch","history","push","result","MovieCard","overview","release_date","original_title","poster_path","genres","vote_average","container","alt","src","Date","getFullYear","name","ReviewsItem","author","content","Reviews","reviews","match","params","movieReviews","CastItem","character","profile_path","image","Cast","cast","movieCast","AdditionalInfo","url","MovieDetailsPage","movie","onGoBack","path","getPathFromProps","getStateFromProps","onClick","component","App","app","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b21e9c60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__3LYTq\",\"navLinkActive\":\"Navigation_navLinkActive__22c0z Navigation_navLink__3LYTq\",\"navList\":\"Navigation_navList__2ia89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieCard_container__32Y3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdditionalInfo_container__3BQRj\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.css';\n\nconst Navigation = () => {\n  return (\n    <ul className={styles.navList}>\n      <li>\n        <NavLink\n          exact\n          to=\"/\"\n          className={styles.navLink}\n          activeClassName={styles.navLinkActive}\n        >\n          Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to=\"/movies\"\n          className={styles.navLink}\n          activeClassName={styles.navLinkActive}\n        >\n          Movies\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9364b1c069b279059da25428c5e601fe';\n\nconst fetchTrendingMovies = () => {\n  return axios\n    .get(`${API_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n};\nconst fetchMovieById = id => {\n  return axios\n    .get(`${API_URL}movie/${id}?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\nconst fetchSearchMovie = query => {\n  return axios\n    .get(`${API_URL}search/movie?api_key=${API_KEY}&${query}`)\n    .then(response => response.data.results);\n};\n\nexport default { fetchTrendingMovies, fetchMovieById, fetchSearchMovie };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst MoviesList = ({ moviesList, location }) => {\n  return (\n    <div>\n      <ul>\n        {moviesList.map(el => (\n          <li key={el.id}>\n            <Link\n              to={{ pathname: `/movies/${el.id}`, state: { from: location } }}\n            >\n              {el.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default withRouter(MoviesList);\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport api from '../components/App/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\nexport default class HomePage extends Component {\n  state = { moviesList: [] };\n\n  componentDidMount() {\n    api.fetchTrendingMovies().then(data => {\n      this.setState({\n        moviesList: data,\n      });\n    });\n  }\n\n  render() {\n    const { moviesList } = this.state;\n    return (\n      <div>\n        <h2>Trending today</h2>\n        {!!moviesList.length && <MoviesList moviesList={moviesList} />}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class SearchForm extends Component {\n  initialState = {\n    value: '',\n  };\n\n  state = { ...this.initialState };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.setState({\n      value,\n    });\n  };\n\n  render() {\n    const { value } = this.state;\n    const { onSubmit } = this.props;\n    const handleSubmit = e => {\n      e.preventDefault();\n      onSubmit(value);\n      this.setState({\n        ...this.initialState,\n      });\n    };\n    return (\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movies...\"\n          onChange={this.handleChange}\n          value={value}\n        />\n        <button type=\"submit\">search</button>\n      </form>\n    );\n  }\n}\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../components/App/api';\nimport SearchForm from '../components/SearchForm/SearchForm';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\nexport default class MoviesPage extends Component {\n  state = { moviesList: null };\n\n  componentDidMount() {\n    const query = this.getQuery();\n    if (query) {\n      api.fetchSearchMovie(`query=${query}`).then(data => {\n        this.setState({\n          moviesList: data,\n        });\n      });\n    }\n  }\n\n  getQuery = () => {\n    const { search } = this.props.location;\n    const searchParams = new URLSearchParams(search);\n    return searchParams.get('query');\n  };\n\n  handleSearch = query => {\n    const { location, history } = this.props;\n    if (query) {\n      history.push({ ...location, search: `query=${query}` });\n      api.fetchSearchMovie(`query=${query}`).then(data => {\n        this.setState({\n          moviesList: data,\n        });\n      });\n    }\n  };\n\n  render() {\n    const { moviesList } = this.state;\n    let result;\n    if (moviesList) {\n      result = (\n        <div>\n          {moviesList.length > 0 ? (\n            <MoviesList moviesList={moviesList} />\n          ) : (\n            <p>Movies not found</p>\n          )}\n        </div>\n      );\n    }\n    return (\n      <div>\n        <SearchForm onSubmit={this.handleSearch} />\n        {!!result && result}\n      </div>\n    );\n  }\n}\n\nMoviesPage.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\n\nconst getYear = date => {\n  const formatedDate = new Date(date);\n  return formatedDate.getFullYear();\n};\n\nconst MovieCard = ({\n  overview,\n  release_date,\n  original_title,\n  poster_path,\n  genres,\n  vote_average,\n}) => {\n  return (\n    <section className={styles.container}>\n      <div>\n        <img\n          alt={`poster${original_title}`}\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n        />\n      </div>\n      <div>\n        <h3>{`${original_title} (${getYear(release_date)})`}</h3>\n        <p>{`User Score: ${vote_average * 10}%`}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {genres.map(el => (\n            <li key={el.id}>{el.name}</li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  overview: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  original_title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  vote_average: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReviewsItem = ({ author, content }) => {\n  return (\n    <li>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nexport default ReviewsItem;\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport api from '../../App/api';\nimport ReviewsItem from './ReviewsItem/ReviewsItem';\n\nconst getIdFromProps = props => props.match.params.id;\nclass Reviews extends Component {\n  state = { reviews: null };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    const movieReviews = `${id}/reviews`;\n    api.fetchMovieById(movieReviews).then(data => {\n      this.setState({\n        reviews: data.results,\n      });\n    });\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        {!!reviews && reviews.length > 0 && (\n          <ul>\n            {reviews.map(el => (\n              <ReviewsItem key={el.id} {...el} />\n            ))}\n          </ul>\n        )}\n        {!!reviews && reviews.length === 0 && (\n          <p>We dont have any reviews for this movie</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CastItem = ({ name, character, profile_path }) => {\n  const image = profile_path\n    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n    : 'noimage.png';\n  return (\n    <li>\n      <img alt={`actor ${name}`} src={image} />\n      <p>{name}</p>\n      {!!character && <p>character: {character}</p>}\n    </li>\n  );\n};\n\nexport default CastItem;\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  profile_path: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport api from '../../App/api';\nimport CastItem from './CastItem/CastItem';\n\nconst getIdFromProps = props => props.match.params.id;\nclass Cast extends Component {\n  state = { cast: [] };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    const movieCast = `${id}/credits`;\n    api.fetchMovieById(movieCast).then(data => {\n      this.setState({\n        cast: data.cast,\n      });\n    });\n  }\n\n  render() {\n    const { cast } = this.state;\n    return (\n      <ul>\n        {!!cast.length && cast.map(el => <CastItem key={el.id} {...el} />)}\n      </ul>\n    );\n  }\n}\n\nexport default Cast;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './AdditionalInfo.module.css';\n\nconst AdditionalInfo = ({ url, state }) => {\n  return (\n    <div className={styles.container}>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to={{ pathname: `${url}/cast`, state }}>cast</Link>\n        </li>\n        <li>\n          <Link to={{ pathname: `${url}/reviews`, state }}>reviews</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default AdditionalInfo;\n\nAdditionalInfo.propTypes = {\n  url: PropTypes.string.isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../components/App/api';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport Reviews from '../components/MovieCard/Reviews/Reviews';\nimport Cast from '../components/MovieCard/Cast/Cast';\nimport AdditionalInfo from '../components/AdditionalInfo/AdditionalInfo';\n\nconst getIdFromProps = props => props.match.params.id;\nconst getUrlFromProps = props => props.match.url;\nconst getPathFromProps = props => props.match.path;\nconst getStateFromProps = props => props.location.state;\nexport default class MovieDetailsPage extends Component {\n  state = { movie: null };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    api.fetchMovieById(id).then(data => {\n      this.setState({\n        movie: data,\n      });\n    });\n  }\n\n  onGoBack = () => {\n    const { history, location } = this.props;\n    if (location.state) {\n      return history.push(location.state.from);\n    }\n    return history.push('/');\n  };\n\n  render() {\n    const { movie } = this.state;\n    const url = getUrlFromProps(this.props);\n    const path = getPathFromProps(this.props);\n    const state = getStateFromProps(this.props);\n    return (\n      movie && (\n        <div>\n          <button type=\"button\" onClick={this.onGoBack}>\n            Go back\n          </button>\n          <MovieCard {...movie} />\n          <AdditionalInfo url={url} state={state} />\n          <Route path={`${path}/cast`} component={Cast} />\n          <Route path={`${path}/reviews`} component={Reviews} />\n        </div>\n      )\n    );\n  }\n}\n\nMovieDetailsPage.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      from: PropTypes.shape({\n        pathname: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport HomePage from '../../pages/HomePage';\nimport MoviesPage from '../../pages/MoviesPage';\nimport MovieDetailsPage from '../../pages/MovieDetailsPage';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/movies/:id\" component={MovieDetailsPage} />\n          <Route path=\"/movies\" component={MoviesPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <Router basename=\"/\">\n    <Route component={App} />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}